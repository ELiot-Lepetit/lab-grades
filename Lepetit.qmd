---
title: "Lepetit"
author: "Eliot Lepetit"
format: html
---

github link : https://github.com/ELiot-Lepetit/lab-grades.git

```{r}
#| message: false
here::i_am("lab-grades.Rproj")
library(here)
library(vroom)
library(ggplot2)
library(dplyr)
library(tidyr)

theme_set(theme_bw())
```
# Introduction

## Question 1 
Loading the dataset
```{r}
#| message: false
grades <- vroom(here("grades.csv"))
```

# Simple analysis

## Question 2
The data set contains `r nrow(grades)` grades.

## Question 3 

```{r}
num_students <- grades |> 
  distinct(id) |>
  nrow()
```

There are  `r num_students` students

## Question 4
```{r}
students <- grades |> 
  select(id, group) |>
  distinct(id, group)
```

We display the 5 bottom rows of the table
```{r}
students |>
  slice_tail(n = 5) |>
  knitr::kable()
```


## Question 5

```{r}
students_per_group <- students |> 
  group_by(group) |> 
  summarise(num_students = n())
```

```{r}
ggplot(students_per_group, aes(x = group, y = num_students)) +
  geom_col() +
  geom_text(aes(label = num_students), vjust = -0.5) +  # Adds number on top of each bar
  labs(
    title = "Number of Students per Group",
    x = "Group",
    y = "Number of Students"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 6 

Filter for "Elemental Mastery and Control" and calculate the average grade per group : 
```{r}
elemental_grades <- grades |> 
  filter(course == "Elemental Mastery and Control") |> 
  group_by(group) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE))
```
 
Plot for each group
```{r}
ggplot(elemental_grades, aes(x = group, y = avg_grade)) +
  geom_col() +
  geom_text(aes(label = round(avg_grade, 1)), vjust = -0.5, size = 3) + 
  labs(
    title = "Average Grades in Elemental Mastery and Control by Group",
    x = "Group",
    y = "Average Grade",
    caption = "Note: All values have been rounded to one decimal place."
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 7

```{r}
ggplot(grades, aes(x = factor(module), y = grade)) +
  geom_boxplot() +
  labs(
    title = "Grade Distribution by Module",
    x = "Module",
    y = "Grade"
  )
```
Module 1 has a slightly higher median grade. Moreover, Module 2 displays more outliers, showing that it has more extreme grades at both ends of the scale. Finally, Module 2 has the slightly shorter IQR so the middle 50% of grades are more tightly clustered around the median compared to Module 1.


# Attendance analysis

## Question 8
```{r}
grades_per_student <- grades |> 
  group_by(id, group) |> 
  summarise(num_grades = n(), .groups = 'drop')
```

This time let's show the first 5 rows of the resulting table
```{r}
grades_per_student |> 
  slice_head(n = 5) |> 
  knitr::kable()
```

Finally, here is a table of the minimum, maximum, average and median number of grades per student.
```{r}
grades_per_student |> 
  summarise(
    min_grades = min(num_grades),
    max_grades = max(num_grades),
    avg_grades = mean(num_grades),
    median_grades = median(num_grades)
  ) |>
  knitr::kable()
```


## Question 9 

```{r}
ancient_magic_grades <- grades |> 
  filter(course == "Ancient Magic and Mysticism") |> 
  group_by(id, group) |> 
  summarise(num_grades = n(), .groups = 'drop')
```

We display the first 5 rows of the data frame that contains the student's ids, their group and the number of grades they obtained in Ancient Magic and Mysticism course.
```{r}
ancient_magic_grades|>
  slice_head(n = 5) |> 
  knitr::kable()
```

## Question 10

```{r}
grade_distrib <- ancient_magic_grades |> 
  count(num_grades) 
```

```{r}
ggplot(grade_distrib, aes(x = num_grades, y = n)) +
  geom_col() +
  geom_text(aes(label = n), vjust = -0.5, size = 3) + 
  labs(
    title = "Distribution of Number of Grades in Ancient Magic and Mysticism",
    x = "Number of Grades",
    y = "Number of Students"
  )
```


## Question 11

```{r}
average_grades_per_group <- ancient_magic_grades |> 
  group_by(group) |> 
  summarise(avg_grades = mean(num_grades), .groups = 'drop')
```

```{r}
ggplot(average_grades_per_group, aes(x = factor(group), y = avg_grades)) +
  geom_col() +
  geom_text(aes(label = round(avg_grades, 1)), vjust = -0.5, size = 3) + 
  labs(
    title = "Average Number of Grades in Ancient Magic and Mysticism by Group",
    x = "Group",
    y = "Average Number of Grades"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
We cannot see a huge difference inbetween groups, this indicates that the number of grades a student has at the end of the course does not depend on which group he is part of.


# Grade analysis

## Question 12
We first calculate the average grade per course for each student
```{r}
average_grades <- grades |> 
  group_by(id, group, course) |> 
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = 'drop')

```

Then we pivot to wide format such taht each course as a separate column
```{r}
average_grades_wide <- average_grades |> 
  pivot_wider(names_from = course, values_from = avg_grade)
```

Finally we only keep the variables we're interested in, for example we can keep "Ancient Magic and Mysticism" and "Celestial Navigation and Astronomy" courses: 
```{r}
average_grades_wide |> 
  select(id, group, `Ancient Magic and Mysticism`, `Celestial Navigation and Astronomy`) |> 
  slice_head(n = 5) |> 
  knitr::kable()
```


## Question 13
```{r}
# Filter the wide data to keep only the relevant columns for the two courses
grades_comparison <- average_grades_wide |> 
  select(id, group, `History of the Arcane`, `Celestial Navigation and Astronomy`) |> 
  drop_na(`History of the Arcane`, `Celestial Navigation and Astronomy`)

```

```{r}
ggplot(grades_comparison, aes(x = `Celestial Navigation and Astronomy`, y = `History of the Arcane`)) +
  geom_point(alpha = .5) +
  geom_smooth(method = "lm", se = FALSE, color = "red") + 
  labs(
    title = "Comparison of Average Grades: History of the Arcane vs. Celestial Navigation and Astronomy",
    x = "Average Grade in Celestial Navigation and Astronomy",
    y = "Average Grade in History of the Arcane"
  ) +
  theme_minimal()
```
In this plot we can observe a slight correlation between having good grades in history of the Arcane and in Celestial navigation and Astronomy courses. However, we cannot affirm there is a causality because there could be an ommision variable biais (eg. if the student spends more time studying). 


## Question 14

We first make sure there is no NAs : 
```{r}
 average_grades_wide |> 
  select(`History of the Arcane`, `Elemental Mastery and Control`) |> 
  summarise_all(~ any(is.na(.))) 
```


```{r}
correlation_by_group <- average_grades_wide |> 
  select(id, group, `History of the Arcane`, `Elemental Mastery and Control`) |> 
  group_by(group) |> 
  summarise(
    correlation = cor(`History of the Arcane`, `Elemental Mastery and Control`),
    .groups = 'drop'
  )
```

Finally, we can display the correlation by group: 
```{r}
correlation_by_group |> 
  knitr::kable()
```

## Question 15

We first identify the group with the highest correlation between the two courses: 
```{r}
group_max_corr <- correlation_by_group |> 
  filter(abs(correlation) == max(abs(correlation))) |> 
  pull(group)
```
Thus, we keep group `r group_max_corr`.

```{r}
strongest_group_data <- average_grades_wide |> 
  filter(group == group_max_corr) |> 
  select(id, `History of the Arcane`, `Elemental Mastery and Control`)
```

```{r}
# Plot the grades for the group with the strongest correlation
ggplot(strongest_group_data, aes(x = `Elemental Mastery and Control`, y = `History of the Arcane`)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "red") + 
  labs(
    title = paste("Grades in History of the Arcane vs. Elemental Mastery and Control for Group", group_max_corr),
    x = "Average Grade in Elemental Mastery and Control",
    y = "Average Grade in History of the Arcane"
  ) +
  theme_minimal()
```

Once again, I added the regression line (here with a slope of approcimately -0.40)


## Question 16
We first compute the final grade for each students : 
```{r}
final_grades <- average_grades_wide |> 
  rowwise() |> 
  mutate(final_grade = mean(c_across(starts_with("Ancient Magic"):last_col()), na.rm = TRUE)) |> 
  ungroup() |> 
  select(id, group, final_grade)
```

We can display the five best students: 
```{r}
top_students <- final_grades |> 
  arrange(desc(final_grade)) |> 
  slice_head(n = 5)
```

```{r}
top_students |>
  knitr::kable()
```


## Question 17

```{r}
ggplot(final_grades, aes(x = factor(group), y = final_grade)) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", color = "red", size = 2) +
  labs(
    title = "Distribution of Final Grades by Group with Mean Points",
    x = "Group",
    y = "Final Grade"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

The boxplot shows the distribution of final grades across different groups, with red points indicating the mean final grade for each group. Most groups have median grades between 10 and 11. Group 8 has the highest mean and group 6 has the lowest mean. 


## Question 18
First, we check if each student has an average grade of at least 5 in all courses : 
```{r}
students_passing_courses <- average_grades_wide |> 
  rowwise() |> 
  mutate(course_pass = all(c_across(`Ancient Magic and Mysticism`:`Swordsmanship and Martial Arts`) >= 5, na.rm = TRUE)) |> 
  ungroup()
```

Then we define the courses in each module and add the module average: 
```{r}
module_1_courses <- c("Elemental Mastery and Control", "History of the Arcane", "Illusion and Enchantment", 
                      "Necromancy and Spirit Summoning", "Potion Brewing and Herbology", "Runecrafting and Glyphwork", "Swordsmanship and Martial Arts")
module_2_courses <- c("Ancient Magic and Mysticism", "Celestial Navigation and Astronomy", "Dragon Lore and Taming")

students_with_modules <- students_passing_courses |> 
  rowwise() |> 
  mutate(
    module_1_avg = mean(c_across(all_of(module_1_courses)), na.rm = TRUE),
    module_2_avg = mean(c_across(all_of(module_2_courses)), na.rm = TRUE),
    modules_pass = module_1_avg >= 10 & module_2_avg >= 10,
    final_grade = mean(c_across(`Ancient Magic and Mysticism`:`Swordsmanship and Martial Arts`), na.rm = TRUE)  # Calculate final grade
  ) |> 
  ungroup()
```

Finally, we can determine final pass status based on both conditions : 
```{r}
final_pass_status <- students_with_modules |> 
  mutate(pass = course_pass & modules_pass) |> 
  select(id, group, final_grade, pass)
```

```{r}
final_pass_status |> 
  slice_head(n = 5) |>
  knitr::kable()
```

